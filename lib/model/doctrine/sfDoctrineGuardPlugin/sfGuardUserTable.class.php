<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('sfGuardUser');
    }

    /**
     * Tra ve mang cp_id ton tai trong mang cho truoc
     * @author vuongch
     * @param array $ids
     */
    public function getCPIds($ids)
    {
        $q = $this->createQuery()
            ->select('DISTINCT(cp_id) AS cp_id')
            ->whereIn('cp_id', $ids);

        return $q->fetchArray();
    }

    public function getUserByUsername($username, $is_active = 1)
    {
        $q = $this->createQuery()
            ->where('username = ?', $username)
            ->addWhere('is_active = ?', $is_active);

        return $q->fetchOne();
    }

    public function getSortUsernameAscList(Doctrine_Query $q)
    {
        return $q->orderBy('username');
    }

    public function setIsActive($ids, $status)
    {
        $q = $this->createQuery()
            ->update()
            ->set('is_active', '?', $status)
	          ->set('updated_at','?',date('Y-m-d H:i:s', strtotime('now')))
            ->whereIn('id', $ids);

        return $q->execute();
    }

    public function setUnLockUser($username)
    {
        $q = $this->createQuery()
            ->update('sfGuardUser u')
            ->set('u.is_lock_signin', '?', 0)
            ->set('u.locked_time', 'NULL')
            ->where('u.username = ?', $username);

        return $q->execute();
    }

    public function updateUserLog($username, $time)
    {
        $q = $this->createQuery()
            ->update()
            ->set('is_lock_signin', '?', 1)
            ->set('locked_time', '?', $time)
            ->where('username = ?', $username);

        return $q->execute();
    }

  /**
   * etrieves a sfGuardUser object by username and is_active flag, is_super_admin flag,L
   * @author loilv4
   * @created on 07/01/2013
   * @param $username
   * @param bool $isActive
   * @param bool $isSuperAdmin
   * @return mixed
   */
  public function retrieveSubAdminByUsername($username, $isActive = true)
  {
    $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u')
        ->where('u.username = ?', $username)
        ->addWhere('u.is_active = ?', $isActive)
//        ->andWhere('u.is_super_admin = ?', $isSuperAdmin)
    ;
    return $query->fetchOne();
  }

  /**
   * Loc theo ten dang nhap
   * @author loilv4
   * @created on 22/01/2013
   * @param $query
   * @param $value
   */
  public static function applyUsernameFilter($query, $value)
  {
    $alias = $query->getRootAlias();
    $value = addcslashes($value, sfConfig::get('app_addcslashes_charlist', "'%_-"));
    $query->andWhere($alias.'.username like ?','%'.trim($value).'%');
  }
  /**
   * Loc theo trang thai
   * @author loilv4
   * @created on 22/04/2013
   * @param $query
   * @param $value
   */
  public static function applyIsActiveFilter($query, $value)
  {
    $alias = $query->getRootAlias();
    $query->andWhere($alias.'.is_active = ?',$value);
  }
  /**
   * Khoa nguoi dung
   * @author loilv4
   * @created on 04/05/2013
   * @param $ids
   */
  public static function deactive($ids) {
    $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('q')
      ->update()
      ->set('q.is_active', 0)
      ->set('updated_at','?',date('Y-m-d H:i:s', strtotime('now')))
      ->andWhereIn('q.id', $ids)
      ->andWhere('q.is_active = ?', 1);
    return $query->execute();
  }

  /**
   * Mo khoa nguoi dung
   * @author loilv4
   * @created on 04/05/2013
   * @param $ids
   */
  public static function active($ids) {
    $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('q')
      ->update()
      ->set('q.is_active', 1)
      ->set('updated_at','?',date('Y-m-d H:i:s', strtotime('now')))
      ->andWhereIn('q.id', $ids)
      ->andWhere('q.is_active = ?', 0);
    return $query->execute();
  }
}