<?php

/**
 * TblClassTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TblClassTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object TblClassTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('TblClass');
  }

  public function getClassInGroupQuery($groupId, $schoolId)
  {
    $query = $this->createQuery('c')
      ->select('c.id id, c.name name, c.description description, c.group_id group_id, c.status status, g.name group_name')
      ->leftJoin('c.TblGroup g')
      ->where('c.is_delete = 0')
      ->andWhere('g.school_id = ?', $schoolId);
    if ($groupId)
      $query->andWhere('c.group_id = ?', $groupId);

    return $query;
  }

  public function getActiveClassInGroupQuery($groupId, $schoolId)
  {
    return $this->getClassInGroupQuery($groupId, $schoolId)
      ->andWhere('c.status = 1');
  }

  public function getActiveClassInGroup($groupId, $schoolId)
  {
    $query = $this->getActiveClassInGroupQuery($groupId, $schoolId);
    return $query->fetchArray();
  }

  public function getClassByIdAndGroupId($id, $groupId, $schoolId)
  {
    $query = $this->getClassInGroupQuery($groupId, $schoolId)
      ->addWhere('c.id = ?', $id);

    return $query->fetchOne();
  }

  public function getClassById($id, $schoolId)
  {
    return $this->getClassInGroupQuery(null, $schoolId)
      ->andWhere('c.id = ?', $id)
      ->fetchOne();
  }

  /**
   * Ham kiem tra xem lop co ton tai giao vien hoac hoc sinh khong
   * @param $classObj
   * @return bool
   */
  public function checkMemberInClass($classObj)
  {
    $listMember = $classObj['TblMember'];
    if (count($listMember)) {
      foreach ($listMember as $member) {
        if ($member['is_delete'] == 0)
          return true;
      }
    }

    $listTeacher = $classObj['TblUser'];
    if (count($listTeacher)) {
      foreach ($listTeacher as $teacher) {
        if ($teacher['is_delete'] == 0)
          return true;
      }
    }
    return false;
  }

  public function getActiveQuery($alias)
  {
    return $this->createQuery($alias)
      ->where($alias . '.status = 1')
      ->andWhere($alias . '.is_delete = 0');
  }

  public function getActiveClassIdsByUserId($userId, $userType) {
    switch ($userType) {
      case UserTypeEnum::TEACHER:
        $arr = $this->getActiveQuery('c')
          ->select('c.id cId, c.name cName')
          ->innerJoin('c.TblUserClassRef ucr')
          ->andWhere('ucr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('cId', 'cName');
        return array_keys($arr);
        break;
      case UserTypeEnum::PARENTS:
        $arr = $this->getActiveQuery('c')
          ->select('c.id cId, c.name cName')
          ->innerJoin('c.TblMember m')
          ->innerJoin('m.TblMemberUserRef umr')
          ->andWhere('umr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('cId', 'cName');
        return array_keys($arr);
        break;
      default:
        $arr = $this->getActiveQuery('c')
          ->select('c.id cId, c.name cName')
          ->innerJoin('c.TblGroup g')
          ->innerJoin('g.TblSchool s')
          ->innerJoin('s.TblUserSchoolRef s')
          ->andWhere('s.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('cId', 'cName');
        return array_keys($arr);
    }
  }

}