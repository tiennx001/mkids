<?php

/**
 * TblMemberTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TblMemberTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object TblMemberTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('TblMember');
  }

  public function getListMemberQuery($schoolId, $classId = null, $keyword = null, $page = 1, $pageSize = -1)
  {
    $query = $this->createQuery('m')
      ->innerJoin('m.TblClass c')
      ->innerJoin('c.TblGroup g')
      ->where('g.school_id = ?', $schoolId)
      ->andWhere('m.is_delete = 0');
    if ($classId)
      $query->andWhere('m.class_id = ?', $classId);
    if ($keyword)
      $query->andWhere('(m.name like ? OR m.description like ?)', ['%' . VtHelper::translateQuery($keyword) . '%', '%' . VtHelper::translateQuery($keyword) . '%']);
    if ($pageSize > 0 && $page > 0) {
      $query->limit($pageSize)
        ->offset(($page - 1) * $pageSize);
    }
    return $query;
  }

  public function getListMember($schoolId, $classId, $keyword, $page, $pageSize)
  {

    return $this->getListMemberQuery($schoolId, $classId, $keyword, $page, $pageSize)->fetchArray();
  }

  public function getMemberById($id, $schoolId)
  {
    return $this->getListMemberQuery($schoolId)
      ->addWhere('m.id = ?', $id)
      ->fetchOne();
  }

  public function getActiveQuery($alias)
  {
    return $this->createQuery($alias)
      ->where($alias . '.status = 1')
      ->andWhere($alias . '.is_delete = 0');
  }

  public function getActiveMemberById($id)
  {
    return $this->getActiveQuery('a')
      ->addWhere('a.id = ?', $id)
      ->fetchOne();
  }

  public function getActiveMemberIdsByUserId($userId, $userType)
  {
    switch ($userType) {
      case UserTypeEnum::TEACHER:
        $arr = $this->getActiveQuery('m')
          ->select('m.id mId, m.name mName')
          ->innerJoin('m.TblClass c')
          ->innerJoin('c.TblUserClassRef ucr')
          ->andWhere('ucr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('mId', 'mName');
        return array_keys($arr);
        break;
      case UserTypeEnum::PARENTS:
        $arr = $this->getActiveQuery('m')
          ->select('m.id mId, m.name mName')
          ->innerJoin('m.TblMemberUserRef umr')
          ->andWhere('umr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('mId', 'mName');
        return array_keys($arr);
        break;
      default:
        $arr = $this->getActiveQuery('m')
          ->select('m.id mId, m.name mName')
          ->innerJoin('m.TblClass c')
          ->innerJoin('c.TblGroup g')
          ->innerJoin('g.TblSchool s')
          ->innerJoin('g.TblUserSchoolRef s')
          ->andWhere('s.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('mId', 'mName');
        return array_keys($arr);
    }
  }

  public function getMemberByIdsQuery($memberIds = null, $classIds = null) {
    $q = $this->getActiveQuery('m');

    if ($memberIds) {
      $q->andWhere('m.id', $memberIds);
    }

    if ($classIds) {
      $q->innerJoin('m.TblClass c')
        ->andWhere('c.id', $classIds);
    }

    return $q;
  }
}