<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TblArticle', 'doctrine');

/**
 * BaseTblArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property tinyint $type
 * @property integer $user_id
 * @property boolean $status
 * @property boolean $is_delete
 * @property TblUser $TblUser
 * @property Doctrine_Collection $TblGroup
 * @property Doctrine_Collection $TblClass
 * @property Doctrine_Collection $TblMember
 * @property Doctrine_Collection $TblNotificationProgram
 * @property Doctrine_Collection $TblArticleImage
 * @property Doctrine_Collection $TblComment
 * @property Doctrine_Collection $TblNotification
 * @property Doctrine_Collection $TblNotificationHis
 * 
 * @method string              getTitle()                  Returns the current record's "title" value
 * @method string              getContent()                Returns the current record's "content" value
 * @method tinyint             getType()                   Returns the current record's "type" value
 * @method integer             getUserId()                 Returns the current record's "user_id" value
 * @method boolean             getStatus()                 Returns the current record's "status" value
 * @method boolean             getIsDelete()               Returns the current record's "is_delete" value
 * @method TblUser             getTblUser()                Returns the current record's "TblUser" value
 * @method Doctrine_Collection getTblGroup()               Returns the current record's "TblGroup" collection
 * @method Doctrine_Collection getTblClass()               Returns the current record's "TblClass" collection
 * @method Doctrine_Collection getTblMember()              Returns the current record's "TblMember" collection
 * @method Doctrine_Collection getTblNotificationProgram() Returns the current record's "TblNotificationProgram" collection
 * @method Doctrine_Collection getTblArticleImage()        Returns the current record's "TblArticleImage" collection
 * @method Doctrine_Collection getTblComment()             Returns the current record's "TblComment" collection
 * @method Doctrine_Collection getTblNotification()        Returns the current record's "TblNotification" collection
 * @method Doctrine_Collection getTblNotificationHis()     Returns the current record's "TblNotificationHis" collection
 * @method TblArticle          setTitle()                  Sets the current record's "title" value
 * @method TblArticle          setContent()                Sets the current record's "content" value
 * @method TblArticle          setType()                   Sets the current record's "type" value
 * @method TblArticle          setUserId()                 Sets the current record's "user_id" value
 * @method TblArticle          setStatus()                 Sets the current record's "status" value
 * @method TblArticle          setIsDelete()               Sets the current record's "is_delete" value
 * @method TblArticle          setTblUser()                Sets the current record's "TblUser" value
 * @method TblArticle          setTblGroup()               Sets the current record's "TblGroup" collection
 * @method TblArticle          setTblClass()               Sets the current record's "TblClass" collection
 * @method TblArticle          setTblMember()              Sets the current record's "TblMember" collection
 * @method TblArticle          setTblNotificationProgram() Sets the current record's "TblNotificationProgram" collection
 * @method TblArticle          setTblArticleImage()        Sets the current record's "TblArticleImage" collection
 * @method TblArticle          setTblComment()             Sets the current record's "TblComment" collection
 * @method TblArticle          setTblNotification()        Sets the current record's "TblNotification" collection
 * @method TblArticle          setTblNotificationHis()     Sets the current record's "TblNotificationHis" collection
 * 
 * @package    xcode
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTblArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tbl_article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Tiêu đề',
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 65535, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Nội dung bài viết',
             'length' => 65535,
             ));
        $this->hasColumn('type', 'tinyint', 2, array(
             'type' => 'tinyint',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Phạm vi tin tức (0 - Toàn trường; 1 - Theo khối; 2 - Theo lớp; 3 - Từng cá nhân)',
             'length' => 2,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'ID người tạo',
             'length' => 8,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             'comment' => 'Trạng thái kích hoạt (0: không kích hoạt; 1: kích hoạt)',
             ));
        $this->hasColumn('is_delete', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'comment' => 'Trạng thái xóa (0: chưa xóa - 1: đã xóa)',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TblUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('TblGroup', array(
             'refClass' => 'TblArticleRef',
             'local' => 'article_id',
             'foreign' => 'group_id'));

        $this->hasMany('TblClass', array(
             'refClass' => 'TblArticleRef',
             'local' => 'article_id',
             'foreign' => 'class_id'));

        $this->hasMany('TblMember', array(
             'refClass' => 'TblArticleRef',
             'local' => 'article_id',
             'foreign' => 'member_id'));

        $this->hasMany('TblNotificationProgram', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('TblArticleImage', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('TblComment', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('TblNotification', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('TblNotificationHis', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}