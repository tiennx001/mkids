<?php

/**
 * TblSchoolTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TblSchoolTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object TblSchoolTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('TblSchool');
  }

  public function getActiveSchoolByUserId($userId){
    return self::getInstance()->createQuery('s')
      ->innerJoin('s.TblUserSchoolRef r')
      ->where('r.user_id = ?', $userId)
      ->andWhere('s.status = 1')
      ->fetchOne();
  }

  public function getActiveSchoolByIdAndUserId($id, $userId)
  {
    return self::getInstance()->createQuery('s')
      ->innerJoin('s.TblUserSchoolRef r')
      ->where('r.user_id = ?', $userId)
      ->andWhere('s.id = ?', $id)
      ->andWhere('s.status = 1')
      ->fetchOne();
  }

  public function getActiveQuery($alias)
  {
    return $this->createQuery($alias)
      ->where($alias . '.status = 1');
  }

  public function getActiveSchoolIdsByUserId($userId, $userType = UserTypeEnum::PRINCIPAL) {
    switch ($userType) {
      case UserTypeEnum::TEACHER:
        $arr =  $this->getActiveQuery('s')
          ->select('s.id sId, s.name sName')
          ->innerJoin('s.TblGroup g')
          ->innerJoin('g.TblClass c')
          ->innerJoin('c.TblUserClassRef ucr')
          ->andWhere('ucr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('sId', 'sName');
        return array_keys($arr);
        break;
      case UserTypeEnum::PARENTS:
        $arr = $this->getActiveQuery('s')
          ->select('s.id sId, s.name sName')
          ->innerJoin('s.TblGroup g')
          ->innerJoin('g.TblClass c')
          ->innerJoin('c.TblMember m')
          ->innerJoin('m.TblMemberUserRef mur')
          ->andWhere('mur.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('sId', 'sName');
        return array_keys($arr);
        break;
      default:
        $arr = $this->getActiveQuery('s')
          ->select('s.id sId, s.name sName')
          ->innerJoin('s.TblUserSchoolRef r')
          ->andWhere('r.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('sId', 'sName');
        return array_keys($arr);
    }
  }
}