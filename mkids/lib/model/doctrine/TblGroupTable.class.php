<?php

/**
 * TblGroupTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TblGroupTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TblGroupTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TblGroup');
    }

    public function getActGroupBySchoolIdQuery($schoolId){
      return $this->createQuery()
        ->where('is_delete = 0')
        ->andWhere('school_id = ?', $schoolId);
    }

    public function getActiveGroupBySchoolId($schoolId){
      return $this->getActiveGroupBySchoolIdQuery($schoolId)
        ->fetchArray();
    }

    public function getActiveGroupByIdAndSchoolId($id,$schoolId){
      return $this->getActiveGroupBySchoolIdQuery($schoolId)
        ->andWhere('id = ?', $id)
        ->fetchOne();
    }

  public function getActiveQuery($alias)
  {
    return $this->createQuery($alias)
      ->where($alias . '.status = 1')
      ->andWhere($alias . '.is_delete = 0');
  }

  public function getActiveGroupIdsByUserId($userId, $userType) {
    switch ($userType) {
      case UserTypeEnum::TEACHER:
        $arr = $this->getActiveQuery('g')
          ->select('g.id gId, g.name gName')
          ->innerJoin('g.TblClass c')
          ->innerJoin('c.TblUserClassRef ucr')
          ->andWhere('ucr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('gId', 'gName');
        return array_keys($arr);
        break;
      case UserTypeEnum::PARENTS:
        $arr = $this->getActiveQuery('g')
          ->select('g.id gId, g.name gName')
          ->innerJoin('g.TblClass c')
          ->innerJoin('c.TblMember m')
          ->innerJoin('m.TblMemberUserRef umr')
          ->andWhere('umr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('gId', 'gName');
        return array_keys($arr);
        break;
      default:
        $arr = $this->getActiveQuery('g')
          ->select('g.id gId, g.name gName')
          ->innerJoin('g.TblSchool s')
          ->innerJoin('s.TblUserSchoolRef usr')
          ->andWhere('usr.user_id = ?', $userId)
          ->execute()
          ->toKeyValueArray('gId', 'gName');
        return array_keys($arr);
    }
  }
}